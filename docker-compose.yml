

version: '3.7'

#networks:
#  dev_network:

volumes:
  static:
  media:
  nginx_conf:
  db_volume:

services:

  db:
    image: postgres:14.3-alpine3.15
    ports:
      - "5431:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postpass
      POSTGRES_DB: upload_data
    volumes:
      - db_volume:/var/lib/postgresql/data

    #networks:
    #  dev_network:
    #    aliases:
    #      - db-main

  app:
    build:
      context: .
    environment:
      PG_USER: postgres
      PG_PASSWORD: postpass
      PG_NAME: upload_data
      PG_HOST: db
      PG_PORT: 5432
      REDIS_HOST: redis
    ports:
      - "8080:8080"
    depends_on:
      - db
      - celery
    restart:
      always
    volumes:
      - static:/code/static
      - media:/code/media
      - nginx_conf:/code/nginx
    working_dir: /code
    entrypoint: /bin/sh /code/entrypoint.sh

  nginx:
    image: nginx:1.19.0-alpine
    #build: ./nginx
    depends_on:
      - app
    ports:
 #     - "81:80"
       - "80:80"
    volumes:
      - static:/code/static
      - media:/code/media
      - nginx_conf:/etc/nginx/conf.d/:ro

    restart: always

  redis:
    image: redis:7.0.0-alpine3.15
    ports:
      - "6379:6379"
    depends_on:
      - db


  celery:
    build:
      context: .
      dockerfile: Dockerfile.celery
    environment:
      PG_USER: postgres
      PG_PASSWORD: postpass
      PG_NAME: upload_data
      PG_HOST: db
      PG_PORT: 5432
      REDIS_HOST: redis
    volumes:
          - static:/code/static
          - media:/code/media
    depends_on:
      - redis
    command: celery worker --app=app --loglevel=info




